<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesoft.org/schema/mule/core"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:context="http://www.springframework.org/schema/context"
      xmlns:github="http://www.mulesoft.org/schema/mule/github"
      xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/3.4/mule.xsd
        http://www.mulesoft.org/schema/mule/github http://www.mulesoft.org/schema/mule/github/current/mule-github.xsd">

    <context:property-placeholder location="${GITHUB_CREDENTIALS}"/>
    <github:config connectionUser="${github.userName}" connectionPassword="${github.secret}" scope="${github.scope}" />

    <flow name="createTestRepository">
        <github:create-repository  repositoryName="#[payload.repository]" description="#[payload.description]" />
    </flow>

    <flow name="forkTestRepository">
        <github:fork-repository owner="#[payload.owner]" repositoryName="#[payload.repository]"/>
    </flow>

    <flow name="getIssues">
        <github:get-issues user="#[payload.owner]" repository="#[payload.repository]">
            <github:filter-data>
                <github:filter-datum key="open">#[payload.state]</github:filter-datum>
            </github:filter-data>
        </github:get-issues>
    </flow>

    <flow name="getIssuesCretedAfter">
        <github:get-issues-creted-after repository="#[payload.repository]" minutes="1"/>
    </flow>

    <flow name="getIssuesSinceNumber">
        <github:get-issues-since-number user="#[payload.owner]" repository="#[payload.repository]" fromIssueNumber="0"/>
    </flow>

    <flow name="createIssue">
        <github:create-issue user="#[payload.owner]" repository="#[payload.repository]" title="#[payload.title]" body="#[payload.body]" assignee="#[payload.user]"/>
    </flow>

    <flow name="closeIssue">
        <github:close-issue repository="#[payload.repository]" issueId="#[payload.issueId]"/>
    </flow>

    <flow name="getIssue">
        <github:get-issue repository="#[payload.repository]" issueId="#[payload.issueId]"/>
    </flow>

    <flow name="getComments">
        <github:get-comments repository="#[payload.repository]" issueId="#[payload.issueId]"/>
    </flow>

    <flow name="createComment">
        <github:create-comment repository="#[payload.repository]" issueId="#[payload.issueId]" comment="#[payload.comment]"/>
    </flow>

    <flow name="editComment">
        <github:edit-comment repository="#[payload.repository]" commentId="#[payload.commentId]" body="#[payload.updatedComment]"/>
    </flow>

    <flow name="deleteComment">
        <github:delete-comment repository="#[payload.repository]" commentId="#[payload.commentId]"/>
    </flow>

    <flow name="getIssueEvent">
        <github:get-issue-event repository="#[payload.repository]" eventId="333"/>
    </flow>

    <flow name="getWatchers">
        <github:get-watchers owner="#[payload.owner]" repositoryName="#[payload.repositoryName]"/>
    </flow>

    <flow name="getWatched">
        <github:get-watched user="#[payload.user]"/>
    </flow>

    <flow name="isWatching">
        <github:is-watching owner="#[payload.owner]" repositoryName="#[payload.repositoryName]"/>
    </flow>

    <flow name="watch">
        <github:watch owner="#[payload.owner]" repositoryName="#[payload.repositoryName]"/>
    </flow>

    <flow name="unwatch">
        <github:unwatch owner="#[payload.owner]" repositoryName="#[payload.repositoryName]"/>
    </flow>

    <flow name="getCollaborators">
        <github:get-collaborators owner="#[payload.owner]" repositoryName="#[payload.repositoryName]" />
    </flow>

    <flow name="isCollaborator">
        <github:is-collaborator owner="#[payload.owner]" repositoryName="#[payload.repositoryName]"  user="#[payload.user]"/>
    </flow>

    <flow name="addCollaborator">
        <github:add-collaborator owner="#[payload.owner]" repositoryName="#[payload.repositoryName]" user="#[payload.user]"/>
    </flow>

    <flow name="removeCollaborator">
        <github:remove-collaborator owner="#[payload.owner]" repositoryName="#[payload.repositoryName]"  user="#[payload.user]"/>
    </flow>

    <flow name="getCommits">
        <github:get-commits owner="#[payload.owner]" repositoryName="#[payload.repositoryName]"/>
    </flow>

    <flow name="getCommitsBySha">
        <github:get-commits-by-sha owner="#[payload.owner]" repositoryName="#[payload.repositoryName]" path="/README.md"/>
    </flow>

    <flow name="getCommit">
        <github:get-commit owner="#[payload.owner]" repositoryName="#[payload.repositoryName]" sha="#[payload.sha]"/>
    </flow>

    <flow name="getCommmitComments">
        <github:get-commmit-comments owner="#[payload.owner]" repositoryName="#[payload.repositoryName]"
                                     sha="#[payload.sha]"/>
    </flow>

    <flow name="getComment">
        <github:get-comment owner="#[payload.owner]" repositoryName="#[payload.repositoryName]" commentId="#[payload.commentId]"/>
    </flow>

    <flow name="addComment">
        <github:add-comment owner="#[payload.owner]" repositoryName="#[payload.repositoryName]" body="#[payload.body]" commitId="#[payload.sha]" line="10"
                            path="/README.md" position="1"/>
    </flow>

    <flow name="editCommitComment">
        <github:edit-commit-comment owner="#[payload.owner]" repositoryName="#[payload.repositoryName]" body="#[payload.body]" commentId="#[payload.commentId]"
                                    line="10" path="/README.md" position="1"/>
    </flow>

    <flow name="deleteCommitComment">
        <github:delete-commit-comment owner="#[payload.owner]" repositoryName="#[payload.repositoryName]" commentId="#[payload.commentId]"/>
    </flow>

    <flow name="getDeployKeys">
        <github:get-deploy-keys owner="#[payload.owner]" repositoryName="#[payload.repositoryName]"/>
    </flow>

    <flow name="getDeployKey">
        <github:get-deploy-key owner="#[payload.owner]" repositoryName="#[payload.repositoryName]" id="#[payload.id]"/>
    </flow>

    <flow name="createDeployKey">
        <github:create-deploy-key owner="#[payload.owner]" repositoryName="#[payload.repositoryName]" title="#[payload.title]" key="#[payload.key]"/>
    </flow>

    <flow name="editDeployKey">
        <github:edit-deploy-key owner="#[payload.owner]" repositoryName="#[payload.repositoryName]" id="#[payload.id]" title="#[payload.title]" />
    </flow>

    <flow name="deleteDeployKey">
        <github:delete-deploy-key owner="mule-tester" repositoryName="#[payload.repositoryName]" id="#[payload.id]"/>
    </flow>

    <flow name="createGist">
        <github:create-gist isPublic="true" description="#[payload.description]">
            <github:files>
                <github:file key="#[payload.filename]" value-ref="#[payload.content]" />
            </github:files>
        </github:create-gist>
    </flow>

    <flow name="getGist">
        <github:get-gist id="#[payload.gistId]"/>
    </flow>

    <flow name="getStarredGist">
        <github:get-starred-gist/>
    </flow>

    <flow name="getGists">
        <github:get-gists user="#[payload.user]"/>
    </flow>

    <flow name="createGistComment">
        <github:create-gist-comment gistId="#[payload.gistId]" comment="#[payload.body]"/>
    </flow>

    <flow name="getGistComments">
        <github:get-gist-comments gistId="#[payload.gistId]"/>
    </flow>

    <flow name="deleteGist">
        <github:delete-gist gistId="#[payload.gistId]"/>
    </flow>

    <flow name="getGistComment">
        <github:get-gist-comment gistId="#[payload.gistId]" commentId="#[payload.commentId]"/>
    </flow>

    <flow name="deleteGistComment">
        <github:delete-gist-comment gistId="#[payload.gistId]" commentId="#[payload.commentId]"/>
    </flow>

    <flow name="editGistComment">
        <github:edit-gist-comment gistId="#[payload.gistId]" commentId="#[payload.commentId]" body="#[payload.updatedBody]"/>
    </flow>

    <flow name="starGist">
        <github:star-gist gistId="#[payload.gistId]"/>
    </flow>

    <flow name="unstarGist">
        <github:unstar-gist gistId="#[payload.gistId]"/>
    </flow>

    <flow name="isStarred">
        <github:is-starred gistId="#[payload.gistId]"/>
    </flow>

    <flow name="forkGist">
        <github:fork-gist gistId="#[payload.gistId]"/>
    </flow>

    <flow name="getLabels">
        <github:get-labels user="#[payload.user]" repository="#[payload.repository]"/>
    </flow>

    <flow name="getLabel">
        <github:get-label user="#[payload.user]" repository="#[payload.repository]" label="#[payload.labelName]"/>
    </flow>

    <flow name="deleteLabel">
        <github:delete-label user="#[payload.user]" repository="#[payload.repository]" label="#[payload.labelName]"/>
    </flow>

    <flow name="createLabel">
        <github:create-label user="#[payload.user]" repository="#[payload.repository]" labelName="#[payload.labelName]" color="#[payload.color]"/>
    </flow>

    <flow name="getMilestones">
        <github:get-milestones user="#[payload.user]" repository="#[payload.repository]" state="#[payload.state]"/>
    </flow>

    <flow name="getMilestone">
        <github:get-milestone user="#[payload.user]" repository="#[payload.repository]" number="#[payload.number]"/>
    </flow>

    <flow name="deleteMilestone">
        <github:delete-milestone user="#[payload.user]" repository="#[payload.repository]" number="#[payload.number]"/>
    </flow>

    <flow name="createMilestone">
        <github:create-milestone user="#[payload.user]" repository="#[payload.repository]" title="#[payload.title]" description="#[payload.description]"
                                 state="#[payload.state]"/>
    </flow>

    <flow name="getUserByLoginName">
        <github:get-user-by-login-name loginName="#[payload.user]"/>
    </flow>

    <flow name="getCurrentUser">
        <github:get-current-user/>
    </flow>

    <flow name="updateCurrentUser">
        <github:update-current-user company="#[payload.company]" location="#[payload.location]" blog="#[payload.blog]"/>
    </flow>

    <flow name="getFollowers">
        <github:get-followers/>
    </flow>

    <flow name="getFollowing">
        <github:get-following/>
    </flow>

    <flow name="isFollowing">
        <github:is-following user="#[payload.user]"/>
    </flow>

    <flow name="follow">
        <github:follow user="#[payload.user]"/>
    </flow>

    <flow name="unfollow">
        <github:unfollow user="#[payload.user]"/>
    </flow>

    <flow name="getEmails">
        <github:get-emails/>
    </flow>

    <flow name="addEmails">
        <github:add-emails>
            <github:emails>
                <github:email>#[payload.email1]</github:email>
                <github:email>#[payload.email2]</github:email>
            </github:emails>
        </github:add-emails>
    </flow>

    <flow name="removeEmails">
        <github:remove-emails>
            <github:emails>
                <github:email>#[payload.email1]</github:email>
                <github:email>#[payload.email2]</github:email>
            </github:emails>
        </github:remove-emails>
    </flow>

    <flow name="getKeys">
        <github:get-keys/>
    </flow>

    <flow name="getKey">
        <github:get-key id="#[payload.id]"/>
    </flow>

    <flow name="createKey">
        <github:create-key title="#[payload.title]" key="#[payload.key]"/>
    </flow>

    <flow name="editKey">
        <github:edit-key keyId="#[payload.id]" title="#[payload.updatedTitle]" />
    </flow>

    <flow name="deleteKey">
        <github:delete-key id="#[payload.id]"/>
    </flow>

   <flow name="getTeam">
		<github:get-team id="#[payload.teamId]"/>
   </flow>

	<flow name="getTeamsForOrg">
		<github:get-teams-for-org organization="#[payload.organization]"/>
	</flow>

	<flow name="createTeam">
		<github:create-team organization="#[payload.organization]" teamName="#[payload.teamName]" config-ref=""/>
	</flow>

	<flow name="editTeam">
		<github:edit-team id="#[payload.teamId]" teamName="#[payload.updatedTeamName]"/>
	</flow>

	<flow name="deleteTeam">
		<github:delete-team id="#[payload.teamId]"/>
	</flow>

	<flow name="getTeamMembers">
		<github:get-team-members id="#[map-payload:teamId]"/>
	</flow>

	<flow name="isTeamMember">
		<github:is-team-member id="#[payload.teamId]" user="#[payload.teamMember]"/>
	</flow>

	<flow name="addTeamMember">
		<github:add-team-member id="#[payload.teamId]" user="#[payload.teamMember]"/>
	</flow>

	<flow name="removeTeamMember">
		<github:remove-team-member id="#[payload.teamId]" user="#[payload.teamMember]"/>
	</flow>

	<flow name="getTeamRepositories">
		<github:get-team-repositories id="#[payload.teamId]"/>
	</flow>

	<flow name="addTeamRepository">
		<github:add-team-repository id="#[payload.teamId]" owner="#[payload.organization]" repositoryName="#[payload.repository]"/>
	</flow>

	<flow name="removeTeamRepository">
		<github:remove-team-repository id="#[payload.teamId]" owner="#[payload.organization]" repositoryName="#[payload.repository]"/>
	</flow>

    <flow name="getRepositories">
        <github:get-repositories/>
    </flow>

    <flow name="getRepositoriesForUser">
        <github:get-repositories-for-user user="#[payload.user]"/>
    </flow>

    <flow name="getOrgRepositories">
        <github:get-org-repositories organization="#[payload.owner]"/>
    </flow>

    <flow name="createRepository">
        <github:create-repository  repositoryName="#[payload.repository]" description="#[payload.description]" hasIssues="true"/>
    </flow>

    <flow name="createRepositoryForOrg">
        <github:create-repository-for-org organization="#[payload.organization]" repositoryName="#[payload.repository]" description="#[payload.description]"
                                          hasIssues="true"/>
    </flow>

    <flow name="getForks">
        <github:get-forks owner="#[payload.owner]" repositoryName="#[payload.repository]"/>
    </flow>

    <flow name="forkRepositoryForOrg">
        <github:fork-repository-for-org organization="#[payload.organization]" owner="#[payload.owner]" repositoryName="#[payload.repository]"/>
    </flow>

    <flow name="getReadme">
        <github:get-contents owner="#[payload.owner]" repositoryName="#[payload.repository]" path="/README.md" branch="#[payload.branch]"/>
    </flow>

    <flow name="updateReadme">
        <github:put-contents owner="#[payload.owner]" repositoryName="#[payload.repository]" path="/README.md" commitMessage="test commit" content="updated file content" sha="#[payload.fileSha]" branch="#[payload.branch]"/>
    </flow>

    <flow name="getLanguages">
        <github:get-languages owner="#[payload.owner]" repositoryName="#[payload.repository]"/>
    </flow>

    <flow name="getBranches">
        <github:get-branches owner="#[payload.owner]" repositoryName="#[payload.repository]"/>
    </flow>

    <flow name="getTags">
        <github:get-tags owner="#[payload.owner]" repositoryName="#[payload.repository]"/>
    </flow>

    <flow name="getContributors">
        <github:get-contributors owner="#[payload.owner]" repositoryName="#[payload.repository]"/>
    </flow>

    <flow name="listDownloadsForRepository">
        <github:list-downloads-for-repository owner="#[payload.owner]" repositoryName="#[payload.repositoryName]" />
    </flow>

    <flow name="getDownload">
        <github:get-download owner="#[payload.owner]" repositoryName="#[payload.repositoryName]" id="1"/>
    </flow>

    <flow name="deleteDownload">
        <github:delete-download owner="#[payload.owner]" repositoryName="#[payload.repositoryName]" id="1"/>
    </flow>

    <flow name="createResource">
        <github:create-resource owner="#[payload.user]" repositoryName="#[payload.repositoryName]" resourceName="resource name" size="1000"/>
    </flow>

    <flow name="uploadResource">
        <github:upload-resource content-ref="foo bar">
            <github:download-resource ref="downloadResourceObj" />
        </github:upload-resource>
    </flow>

    <flow name="getTreeRecursively">
        <github:get-tree-recursively owner="mulesoft" repositoryName="github-connector" sha="8f7e98b8191285483e07f50b64a69c9bba341c5b" />
    </flow>

    <flow name="getReferences">
        <github:get-references owner="#[payload.owner]" repositoryName="#[payload.repository]"/>
    </flow>

    <flow name="createReference">
        <github:create-reference owner="#[payload.owner]" repositoryName="#[payload.repository]" sha="#[payload.sha]" referenceName="#[payload.referenceName]"/>
    </flow>

    <flow name="getPullRequest">
        <github:get-pull-request owner="#[payload.owner]" repositoryName="#[payload.repository]" id="#[payload.pullRequestNumber]"/>
    </flow>

    <flow name="getPullRequests">
        <github:get-pull-requests owner="#[payload.owner]" repositoryName="#[payload.repository]" state="open"/>
    </flow>

    <flow name="pagePullRequests">
        <github:page-pull-requests owner="#[payload.owner]" repositoryName="#[payload.repository]" state="open"/>
    </flow>

    <flow name="createPullRequest">
        <github:create-pull-request owner="#[payload.owner]" repositoryName="#[payload.repository]" body="#[payload.body]" title="#[payload.title]" head="#[payload.head]" base="#[payload.base]"/>
    </flow>

    <flow name="createPullRequestFromIssue">
        <github:create-pull-request-from-issue owner="mule-tester" repositoryName="github-connector" issueId="1" head="#[map-payload:head]" base="#[map-payload:base]"/>
    </flow>

    <flow name="editPullRequest">
        <github:edit-pull-request owner="#[payload.owner]" repositoryName="#[payload.repository]" id="#[payload.pullRequestNumber]" title="#[payload.updatedTitle]"/>
    </flow>

    <flow name="getPullRequestCommits">
        <github:get-pull-request-commits owner="#[payload.owner]" repositoryName="#[payload.repository]" id="#[payload.pullRequestNumber]" />
    </flow>

    <flow name="getPullRequestFiles">
        <github:get-pull-request-files owner="#[payload.owner]" repositoryName="#[payload.repository]" id="#[payload.pullRequestNumber]" />
    </flow>

    <flow name="isPullRequestMerged">
        <github:is-pull-request-merged owner="#[payload.owner]" repositoryName="#[payload.repository]" id="#[payload.pullRequestNumber]" />
    </flow>

    <flow name="mergePullRequest">
        <github:merge-pull-request owner="#[payload.owner]" repositoryName="#[payload.repository]" id="#[payload.pullRequestNumber]" commitMessage="message" />
    </flow>

    <flow name="createPullRequestComment">
        <github:create-pull-request-comment owner="#[payload.owner]" repositoryName="#[payload.repository]" pullRequestId="#[payload.pullRequestNumber]" commitId="#[payload.commitId]"
                                            body="#[payload.comment]" path="README.md" position="10" line="1" />
    </flow>

    <flow name="replyToPullRequestComment">
        <github:reply-to-pull-request-comment owner="#[payload.owner]" repositoryName="#[payload.repository]" pullRequestId="#[payload.pullRequestNumber]"
                                              commentId="#[payload.commentId]" body="#[payload.reply]" />
    </flow>

    <flow name="editPullRequestComment">
        <github:edit-pull-request-comment owner="#[payload.owner]" repositoryName="#[payload.repository]" commentId="#[payload.commentId]" body="#[payload.updatedComment]" />
    </flow>

    <flow name="deletePullRequestComment">
        <github:delete-pull-request-comment owner="#[payload.owner]" repositoryName="#[payload.repository]" commentId="#[payload.commentId]"/>
    </flow>

    <flow name="getPullRequestComment">
        <github:get-pull-request-comment owner="#[payload.owner]" repositoryName="#[payload.repository]" commentId="#[payload.commentId]"/>
    </flow>

    <flow name="getPullRequestComments">
        <github:get-pull-request-comments owner="#[payload.owner]" repositoryName="#[payload.repository]" id="#[payload.pullRequestNumber]"/>
    </flow>

    <flow name="pagePullRequestComments">
        <github:page-pull-request-comments owner="#[payload.owner]" repositoryName="#[payload.repository]" id="#[payload.pullRequestNumber]"/>
    </flow>



</mule>